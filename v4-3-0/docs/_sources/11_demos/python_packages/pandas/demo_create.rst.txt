
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "11_demos\python_packages\pandas\demo_create.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_11_demos_python_packages_pandas_demo_create.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_11_demos_python_packages_pandas_demo_create.py:

Create and view an object
============================

.. GENERATED FROM PYTHON SOURCE LINES 5-10

.. code-block:: Python


    import pandas as pd
    import numpy as np









.. GENERATED FROM PYTHON SOURCE LINES 12-13

**Create an object**

.. GENERATED FROM PYTHON SOURCE LINES 13-15

.. code-block:: Python

    series = pd.Series([1, 3, 5, np.nan, 6, 8])








.. GENERATED FROM PYTHON SOURCE LINES 16-18

.. code-block:: Python

    dates = pd.date_range("20220501", periods=6)








.. GENERATED FROM PYTHON SOURCE LINES 19-21

.. code-block:: Python

    dataFrame = pd.DataFrame(np.random.randn(6, 4), index=dates, columns=list("ABCD"))








.. GENERATED FROM PYTHON SOURCE LINES 22-33

.. code-block:: Python

    dataFrame2 = pd.DataFrame(
        {
            "A": 1.0,
            "B": pd.Timestamp("20220501"),
            "C": pd.Series(1, index=list(range(4)), dtype="float32"),
            "D": np.array([3] * 4, dtype="int32"),
            "E": pd.Categorical(["test", "train", "test", "train"]),
            "F": "foo",
        }
    )








.. GENERATED FROM PYTHON SOURCE LINES 34-35

**View an object**

.. GENERATED FROM PYTHON SOURCE LINES 35-37

.. code-block:: Python

    dataFrame2.head()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>A</th>
          <th>B</th>
          <th>C</th>
          <th>D</th>
          <th>E</th>
          <th>F</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>test</td>
          <td>foo</td>
        </tr>
        <tr>
          <th>1</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>train</td>
          <td>foo</td>
        </tr>
        <tr>
          <th>2</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>test</td>
          <td>foo</td>
        </tr>
        <tr>
          <th>3</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>train</td>
          <td>foo</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 38-40

.. code-block:: Python

    dataFrame2.tail()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>A</th>
          <th>B</th>
          <th>C</th>
          <th>D</th>
          <th>E</th>
          <th>F</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>test</td>
          <td>foo</td>
        </tr>
        <tr>
          <th>1</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>train</td>
          <td>foo</td>
        </tr>
        <tr>
          <th>2</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>test</td>
          <td>foo</td>
        </tr>
        <tr>
          <th>3</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>train</td>
          <td>foo</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 41-43

.. code-block:: Python

    dataFrame2.dtypes





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    A          float64
    B    datetime64[s]
    C          float32
    D            int32
    E         category
    F           object
    dtype: object



.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: Python

    dataFrame2.index





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Index([0, 1, 2, 3], dtype='int64')



.. GENERATED FROM PYTHON SOURCE LINES 47-49

.. code-block:: Python

    dataFrame2.columns





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Index(['A', 'B', 'C', 'D', 'E', 'F'], dtype='object')



.. GENERATED FROM PYTHON SOURCE LINES 50-52

.. code-block:: Python

    dataFrame2.describe()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>A</th>
          <th>B</th>
          <th>C</th>
          <th>D</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>count</th>
          <td>4.0</td>
          <td>4</td>
          <td>4.0</td>
          <td>4.0</td>
        </tr>
        <tr>
          <th>mean</th>
          <td>1.0</td>
          <td>2022-05-01 00:00:00</td>
          <td>1.0</td>
          <td>3.0</td>
        </tr>
        <tr>
          <th>min</th>
          <td>1.0</td>
          <td>2022-05-01 00:00:00</td>
          <td>1.0</td>
          <td>3.0</td>
        </tr>
        <tr>
          <th>25%</th>
          <td>1.0</td>
          <td>2022-05-01 00:00:00</td>
          <td>1.0</td>
          <td>3.0</td>
        </tr>
        <tr>
          <th>50%</th>
          <td>1.0</td>
          <td>2022-05-01 00:00:00</td>
          <td>1.0</td>
          <td>3.0</td>
        </tr>
        <tr>
          <th>75%</th>
          <td>1.0</td>
          <td>2022-05-01 00:00:00</td>
          <td>1.0</td>
          <td>3.0</td>
        </tr>
        <tr>
          <th>max</th>
          <td>1.0</td>
          <td>2022-05-01 00:00:00</td>
          <td>1.0</td>
          <td>3.0</td>
        </tr>
        <tr>
          <th>std</th>
          <td>0.0</td>
          <td>NaN</td>
          <td>0.0</td>
          <td>0.0</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 53-54

Convert to numpy

.. GENERATED FROM PYTHON SOURCE LINES 54-56

.. code-block:: Python

    dataFrame.to_numpy()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    array([[-0.48070149,  0.69640839,  0.91964576, -0.16073026],
           [-0.34969799,  1.00341675, -0.82853341,  0.78270195],
           [-1.79253563,  0.25743326,  0.58993783, -0.33844128],
           [ 1.79722667, -1.10740684,  0.48154367,  1.27495664],
           [ 0.38022496, -0.12789082, -0.85380203,  2.81773155],
           [ 0.25135383,  1.00941959,  1.31962369, -0.1835926 ]])



.. GENERATED FROM PYTHON SOURCE LINES 57-58

**Transpose, sorting data**

.. GENERATED FROM PYTHON SOURCE LINES 58-60

.. code-block:: Python

    dataFrame.T






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>2022-05-01</th>
          <th>2022-05-02</th>
          <th>2022-05-03</th>
          <th>2022-05-04</th>
          <th>2022-05-05</th>
          <th>2022-05-06</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>A</th>
          <td>-0.480701</td>
          <td>-0.349698</td>
          <td>-1.792536</td>
          <td>1.797227</td>
          <td>0.380225</td>
          <td>0.251354</td>
        </tr>
        <tr>
          <th>B</th>
          <td>0.696408</td>
          <td>1.003417</td>
          <td>0.257433</td>
          <td>-1.107407</td>
          <td>-0.127891</td>
          <td>1.009420</td>
        </tr>
        <tr>
          <th>C</th>
          <td>0.919646</td>
          <td>-0.828533</td>
          <td>0.589938</td>
          <td>0.481544</td>
          <td>-0.853802</td>
          <td>1.319624</td>
        </tr>
        <tr>
          <th>D</th>
          <td>-0.160730</td>
          <td>0.782702</td>
          <td>-0.338441</td>
          <td>1.274957</td>
          <td>2.817732</td>
          <td>-0.183593</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 61-63

.. code-block:: Python

    dataFrame.sort_index(axis=1, ascending=False)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>D</th>
          <th>C</th>
          <th>B</th>
          <th>A</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2022-05-01</th>
          <td>-0.160730</td>
          <td>0.919646</td>
          <td>0.696408</td>
          <td>-0.480701</td>
        </tr>
        <tr>
          <th>2022-05-02</th>
          <td>0.782702</td>
          <td>-0.828533</td>
          <td>1.003417</td>
          <td>-0.349698</td>
        </tr>
        <tr>
          <th>2022-05-03</th>
          <td>-0.338441</td>
          <td>0.589938</td>
          <td>0.257433</td>
          <td>-1.792536</td>
        </tr>
        <tr>
          <th>2022-05-04</th>
          <td>1.274957</td>
          <td>0.481544</td>
          <td>-1.107407</td>
          <td>1.797227</td>
        </tr>
        <tr>
          <th>2022-05-05</th>
          <td>2.817732</td>
          <td>-0.853802</td>
          <td>-0.127891</td>
          <td>0.380225</td>
        </tr>
        <tr>
          <th>2022-05-06</th>
          <td>-0.183593</td>
          <td>1.319624</td>
          <td>1.009420</td>
          <td>0.251354</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 64-65

.. code-block:: Python

    dataFrame.sort_values(by="B")





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>A</th>
          <th>B</th>
          <th>C</th>
          <th>D</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2022-05-04</th>
          <td>1.797227</td>
          <td>-1.107407</td>
          <td>0.481544</td>
          <td>1.274957</td>
        </tr>
        <tr>
          <th>2022-05-05</th>
          <td>0.380225</td>
          <td>-0.127891</td>
          <td>-0.853802</td>
          <td>2.817732</td>
        </tr>
        <tr>
          <th>2022-05-03</th>
          <td>-1.792536</td>
          <td>0.257433</td>
          <td>0.589938</td>
          <td>-0.338441</td>
        </tr>
        <tr>
          <th>2022-05-01</th>
          <td>-0.480701</td>
          <td>0.696408</td>
          <td>0.919646</td>
          <td>-0.160730</td>
        </tr>
        <tr>
          <th>2022-05-02</th>
          <td>-0.349698</td>
          <td>1.003417</td>
          <td>-0.828533</td>
          <td>0.782702</td>
        </tr>
        <tr>
          <th>2022-05-06</th>
          <td>0.251354</td>
          <td>1.009420</td>
          <td>1.319624</td>
          <td>-0.183593</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.030 seconds)


.. _sphx_glr_download_11_demos_python_packages_pandas_demo_create.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: demo_create.ipynb <demo_create.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: demo_create.py <demo_create.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: demo_create.zip <demo_create.zip>`
