
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "11_demos\itom\plots\demoPickPointsAndMarkers.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_11_demos_itom_plots_demoPickPointsAndMarkers.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_11_demos_itom_plots_demoPickPointsAndMarkers.py:

Pick points and markers
==========================

This demo shows how you can pick points and markers in the ``itom`` plot.

.. GENERATED FROM PYTHON SOURCE LINES 5-11

.. code-block:: default



    from itom import dataObject
    from itom import plot2
    from itom import plotItem


.. GENERATED FROM PYTHON SOURCE LINES 13-16

**Pick Points demo**

Create a random 2 dimensional ``dataObject`` and plot it.

.. GENERATED FROM PYTHON SOURCE LINES 16-21

.. code-block:: default

    obj = dataObject.randN([1024, 1024], "int16")

    [nr, h] = plot2(obj)
    h["title"] = "Showcase: pick marker"


.. GENERATED FROM PYTHON SOURCE LINES 22-24

.. image:: ../../_static/demoPickPointsAndMarkers_1.png
   :width: 100%

.. GENERATED FROM PYTHON SOURCE LINES 26-27

This command let the user pick maximum 4 points (earlier break with space, esc aborts the selection).

.. GENERATED FROM PYTHON SOURCE LINES 27-34

.. code-block:: default

    pickedPoints = dataObject()
    h.pickPoints(pickedPoints, 4)

    print("coordinates of selected points: ")
    for numPoint in range(pickedPoints.shape[1]):
        print("x: {}, y: {}".format(pickedPoints[0, numPoint], pickedPoints[1, numPoint]))


.. GENERATED FROM PYTHON SOURCE LINES 35-43

Plot the ``dataObject`` again together with the previously selected points as ``marker``.

The second argument of ``plotMarkers`` is a style-string (this may change) ``[color, symbol, size]``:
=======  =====================================
color    {b, g, r, c, m, y, k, w}
symbol   {., o, s, d, >, v, ^, <, x, *, +, h}
size     any integer number
=======  =====================================

.. GENERATED FROM PYTHON SOURCE LINES 43-48

.. code-block:: default

    markers = dataObject([2, 3], "float32", data=[10.1, 20.2, 30.3, 7, 100, 500])
    [nr, h] = plot2(obj)
    h["title"] = "Showcase: plot the currently selected points"
    h.call("plotMarkers", pickedPoints, "b+10", "setName")  # 'setName' is the name for this set of markers (optional)


.. GENERATED FROM PYTHON SOURCE LINES 49-51

.. image:: ../../_static/demoPickPointsAndMarkers_2.png
   :width: 100%

.. GENERATED FROM PYTHON SOURCE LINES 53-54

Delete marker set

.. GENERATED FROM PYTHON SOURCE LINES 54-57

.. code-block:: default

    h.call("deleteMarkers", "setName")  # deletes given set
    h.call("deleteMarkers", "")  # deletes all sets


.. GENERATED FROM PYTHON SOURCE LINES 58-61

**Paint geometric shapes**

Create a random 2 dimensional ``dataObject`` and plot it.

.. GENERATED FROM PYTHON SOURCE LINES 61-65

.. code-block:: default

    obj = dataObject.randN([1024, 1024], "int16")
    [nr, h] = plot2(obj)
    h["title"] = "Showcase: paint 4 ellipses"


.. GENERATED FROM PYTHON SOURCE LINES 66-67

This command let the user pick maximum 4 points (earlier break with space, esc aborts the selection).

.. GENERATED FROM PYTHON SOURCE LINES 67-73

.. code-block:: default

    geometricShapes = h.drawAndPickElements(plotItem.PrimitiveEllipse, 4)

    print("selected shapes:")
    for shape in geometricShapes:
        print(shape)


.. GENERATED FROM PYTHON SOURCE LINES 74-75

Plot the ``dataObject`` again together with the previously painted ellipses ``geometricShapes``.

.. GENERATED FROM PYTHON SOURCE LINES 75-80

.. code-block:: default

    [nr, hDrawInto] = plot2(obj)
    hDrawInto["title"] = "Showcase: plot painted ellipses"
    hDrawInto.call("setGeometricShapes", geometricShapes)  # "b" and "setname" will be ignored anyway
    shapes = hDrawInto["geometricShapes"]


.. GENERATED FROM PYTHON SOURCE LINES 81-83

.. image:: ../../_static/demoPickPointsAndMarkers_3.png
   :width: 100%


.. _sphx_glr_download_11_demos_itom_plots_demoPickPointsAndMarkers.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: demoPickPointsAndMarkers.py <demoPickPointsAndMarkers.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: demoPickPointsAndMarkers.ipynb <demoPickPointsAndMarkers.ipynb>`
