
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "11_demos\python_packages\pandas\demo_create.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_11_demos_python_packages_pandas_demo_create.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_11_demos_python_packages_pandas_demo_create.py:

Create and view an object
============================

.. GENERATED FROM PYTHON SOURCE LINES 5-9

.. code-block:: default

    import pandas as pd
    import numpy as np









.. GENERATED FROM PYTHON SOURCE LINES 11-12

**Create an object**

.. GENERATED FROM PYTHON SOURCE LINES 12-14

.. code-block:: default

    series = pd.Series([1, 3, 5, np.nan, 6, 8])








.. GENERATED FROM PYTHON SOURCE LINES 15-17

.. code-block:: default

    dates = pd.date_range("20220501", periods=6)








.. GENERATED FROM PYTHON SOURCE LINES 18-20

.. code-block:: default

    dataFrame = pd.DataFrame(np.random.randn(6, 4), index=dates, columns=list("ABCD"))








.. GENERATED FROM PYTHON SOURCE LINES 21-32

.. code-block:: default

    dataFrame2 = pd.DataFrame(
        {
            "A": 1.0,
            "B": pd.Timestamp("20220501"),
            "C": pd.Series(1, index=list(range(4)), dtype="float32"),
            "D": np.array([3] * 4, dtype="int32"),
            "E": pd.Categorical(["test", "train", "test", "train"]),
            "F": "foo",
        }
    )








.. GENERATED FROM PYTHON SOURCE LINES 33-34

**View an object**

.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: default

    dataFrame2.head()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>A</th>
          <th>B</th>
          <th>C</th>
          <th>D</th>
          <th>E</th>
          <th>F</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>test</td>
          <td>foo</td>
        </tr>
        <tr>
          <th>1</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>train</td>
          <td>foo</td>
        </tr>
        <tr>
          <th>2</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>test</td>
          <td>foo</td>
        </tr>
        <tr>
          <th>3</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>train</td>
          <td>foo</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 37-39

.. code-block:: default

    dataFrame2.tail()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>A</th>
          <th>B</th>
          <th>C</th>
          <th>D</th>
          <th>E</th>
          <th>F</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>test</td>
          <td>foo</td>
        </tr>
        <tr>
          <th>1</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>train</td>
          <td>foo</td>
        </tr>
        <tr>
          <th>2</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>test</td>
          <td>foo</td>
        </tr>
        <tr>
          <th>3</th>
          <td>1.0</td>
          <td>2022-05-01</td>
          <td>1.0</td>
          <td>3</td>
          <td>train</td>
          <td>foo</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 40-42

.. code-block:: default

    dataFrame2.dtypes





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    A           float64
    B    datetime64[ns]
    C           float32
    D             int32
    E          category
    F            object
    dtype: object



.. GENERATED FROM PYTHON SOURCE LINES 43-45

.. code-block:: default

    dataFrame2.index





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Int64Index([0, 1, 2, 3], dtype='int64')



.. GENERATED FROM PYTHON SOURCE LINES 46-48

.. code-block:: default

    dataFrame2.columns





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Index(['A', 'B', 'C', 'D', 'E', 'F'], dtype='object')



.. GENERATED FROM PYTHON SOURCE LINES 49-51

.. code-block:: default

    dataFrame2.describe()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>A</th>
          <th>C</th>
          <th>D</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>count</th>
          <td>4.0</td>
          <td>4.0</td>
          <td>4.0</td>
        </tr>
        <tr>
          <th>mean</th>
          <td>1.0</td>
          <td>1.0</td>
          <td>3.0</td>
        </tr>
        <tr>
          <th>std</th>
          <td>0.0</td>
          <td>0.0</td>
          <td>0.0</td>
        </tr>
        <tr>
          <th>min</th>
          <td>1.0</td>
          <td>1.0</td>
          <td>3.0</td>
        </tr>
        <tr>
          <th>25%</th>
          <td>1.0</td>
          <td>1.0</td>
          <td>3.0</td>
        </tr>
        <tr>
          <th>50%</th>
          <td>1.0</td>
          <td>1.0</td>
          <td>3.0</td>
        </tr>
        <tr>
          <th>75%</th>
          <td>1.0</td>
          <td>1.0</td>
          <td>3.0</td>
        </tr>
        <tr>
          <th>max</th>
          <td>1.0</td>
          <td>1.0</td>
          <td>3.0</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 52-53

Convert to numpy

.. GENERATED FROM PYTHON SOURCE LINES 53-55

.. code-block:: default

    dataFrame.to_numpy()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    array([[ 2.51194555, -1.80634016, -0.63091148,  0.57827393],
           [-0.15524733, -0.92884337, -0.67329603, -0.16581944],
           [ 0.13049717,  0.39749269, -0.02893293,  1.14751273],
           [ 0.77122503, -0.74610714,  1.02496218,  0.06675625],
           [ 2.0653632 ,  1.08194213, -0.13582842,  0.50800546],
           [-1.08819937,  1.69327597,  0.28704203, -0.38299148]])



.. GENERATED FROM PYTHON SOURCE LINES 56-57

**Transpose, sorting data**

.. GENERATED FROM PYTHON SOURCE LINES 57-59

.. code-block:: default

    dataFrame.T






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>2022-05-01</th>
          <th>2022-05-02</th>
          <th>2022-05-03</th>
          <th>2022-05-04</th>
          <th>2022-05-05</th>
          <th>2022-05-06</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>A</th>
          <td>2.511946</td>
          <td>-0.155247</td>
          <td>0.130497</td>
          <td>0.771225</td>
          <td>2.065363</td>
          <td>-1.088199</td>
        </tr>
        <tr>
          <th>B</th>
          <td>-1.806340</td>
          <td>-0.928843</td>
          <td>0.397493</td>
          <td>-0.746107</td>
          <td>1.081942</td>
          <td>1.693276</td>
        </tr>
        <tr>
          <th>C</th>
          <td>-0.630911</td>
          <td>-0.673296</td>
          <td>-0.028933</td>
          <td>1.024962</td>
          <td>-0.135828</td>
          <td>0.287042</td>
        </tr>
        <tr>
          <th>D</th>
          <td>0.578274</td>
          <td>-0.165819</td>
          <td>1.147513</td>
          <td>0.066756</td>
          <td>0.508005</td>
          <td>-0.382991</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 60-62

.. code-block:: default

    dataFrame.sort_index(axis=1, ascending=False)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>D</th>
          <th>C</th>
          <th>B</th>
          <th>A</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2022-05-01</th>
          <td>0.578274</td>
          <td>-0.630911</td>
          <td>-1.806340</td>
          <td>2.511946</td>
        </tr>
        <tr>
          <th>2022-05-02</th>
          <td>-0.165819</td>
          <td>-0.673296</td>
          <td>-0.928843</td>
          <td>-0.155247</td>
        </tr>
        <tr>
          <th>2022-05-03</th>
          <td>1.147513</td>
          <td>-0.028933</td>
          <td>0.397493</td>
          <td>0.130497</td>
        </tr>
        <tr>
          <th>2022-05-04</th>
          <td>0.066756</td>
          <td>1.024962</td>
          <td>-0.746107</td>
          <td>0.771225</td>
        </tr>
        <tr>
          <th>2022-05-05</th>
          <td>0.508005</td>
          <td>-0.135828</td>
          <td>1.081942</td>
          <td>2.065363</td>
        </tr>
        <tr>
          <th>2022-05-06</th>
          <td>-0.382991</td>
          <td>0.287042</td>
          <td>1.693276</td>
          <td>-1.088199</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 63-64

.. code-block:: default

    dataFrame.sort_values(by="B")





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>A</th>
          <th>B</th>
          <th>C</th>
          <th>D</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2022-05-01</th>
          <td>2.511946</td>
          <td>-1.806340</td>
          <td>-0.630911</td>
          <td>0.578274</td>
        </tr>
        <tr>
          <th>2022-05-02</th>
          <td>-0.155247</td>
          <td>-0.928843</td>
          <td>-0.673296</td>
          <td>-0.165819</td>
        </tr>
        <tr>
          <th>2022-05-04</th>
          <td>0.771225</td>
          <td>-0.746107</td>
          <td>1.024962</td>
          <td>0.066756</td>
        </tr>
        <tr>
          <th>2022-05-03</th>
          <td>0.130497</td>
          <td>0.397493</td>
          <td>-0.028933</td>
          <td>1.147513</td>
        </tr>
        <tr>
          <th>2022-05-05</th>
          <td>2.065363</td>
          <td>1.081942</td>
          <td>-0.135828</td>
          <td>0.508005</td>
        </tr>
        <tr>
          <th>2022-05-06</th>
          <td>-1.088199</td>
          <td>1.693276</td>
          <td>0.287042</td>
          <td>-0.382991</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.029 seconds)


.. _sphx_glr_download_11_demos_python_packages_pandas_demo_create.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: demo_create.py <demo_create.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: demo_create.ipynb <demo_create.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
