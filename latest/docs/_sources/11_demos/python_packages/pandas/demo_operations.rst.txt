
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "11_demos\python_packages\pandas\demo_operations.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_11_demos_python_packages_pandas_demo_operations.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_11_demos_python_packages_pandas_demo_operations.py:

Operations
=============

.. GENERATED FROM PYTHON SOURCE LINES 5-12

.. code-block:: default

    import pandas as pd
    import numpy as np


    dates = pd.date_range("20220501", periods=6)
    dataFrame = pd.DataFrame(np.random.randn(6, 4), index=dates, columns=list("ABCD"))








.. GENERATED FROM PYTHON SOURCE LINES 14-15

**Statistics**

.. GENERATED FROM PYTHON SOURCE LINES 15-17

.. code-block:: default

    dataFrame.mean()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    A   -0.076181
    B   -0.154871
    C    0.021672
    D    0.170158
    dtype: float64



.. GENERATED FROM PYTHON SOURCE LINES 18-19

Mean value of axis ``1``:

.. GENERATED FROM PYTHON SOURCE LINES 19-21

.. code-block:: default

    dataFrame.mean(1)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    2022-05-01   -0.539588
    2022-05-02    0.889715
    2022-05-03    0.513966
    2022-05-04    0.142509
    2022-05-05   -0.654542
    2022-05-06   -0.410892
    Freq: D, dtype: float64



.. GENERATED FROM PYTHON SOURCE LINES 22-24

.. code-block:: default

    series = pd.Series([1, 3, 5, np.nan, 6, 8], index=dates).shift(2)








.. GENERATED FROM PYTHON SOURCE LINES 25-27

.. code-block:: default

    dataFrame.sub(series, axis="index")






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>A</th>
          <th>B</th>
          <th>C</th>
          <th>D</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2022-05-01</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>2022-05-02</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>2022-05-03</th>
          <td>-1.640960</td>
          <td>-1.456855</td>
          <td>1.206000</td>
          <td>-0.052322</td>
        </tr>
        <tr>
          <th>2022-05-04</th>
          <td>-3.468697</td>
          <td>-4.656828</td>
          <td>-2.609051</td>
          <td>-0.695389</td>
        </tr>
        <tr>
          <th>2022-05-05</th>
          <td>-5.352329</td>
          <td>-4.932975</td>
          <td>-5.455950</td>
          <td>-6.876913</td>
        </tr>
        <tr>
          <th>2022-05-06</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 28-29

**Apply**

.. GENERATED FROM PYTHON SOURCE LINES 29-31

.. code-block:: default

    dataFrame.apply(np.cumsum)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>A</th>
          <th>B</th>
          <th>C</th>
          <th>D</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2022-05-01</th>
          <td>0.631104</td>
          <td>-0.756255</td>
          <td>-2.131839</td>
          <td>0.098637</td>
        </tr>
        <tr>
          <th>2022-05-02</th>
          <td>1.017295</td>
          <td>0.137240</td>
          <td>-1.091693</td>
          <td>1.337665</td>
        </tr>
        <tr>
          <th>2022-05-03</th>
          <td>0.376335</td>
          <td>-0.319615</td>
          <td>1.114307</td>
          <td>2.285343</td>
        </tr>
        <tr>
          <th>2022-05-04</th>
          <td>-0.092362</td>
          <td>-1.976443</td>
          <td>1.505256</td>
          <td>4.589954</td>
        </tr>
        <tr>
          <th>2022-05-05</th>
          <td>-0.444691</td>
          <td>-1.909418</td>
          <td>1.049306</td>
          <td>2.713041</td>
        </tr>
        <tr>
          <th>2022-05-06</th>
          <td>-0.457084</td>
          <td>-0.929227</td>
          <td>0.130034</td>
          <td>1.020947</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 32-34

.. code-block:: default

    dataFrame.apply(lambda x: x.max() - x.min())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    A    1.272064
    B    2.637019
    C    4.337839
    D    4.181524
    dtype: float64



.. GENERATED FROM PYTHON SOURCE LINES 35-36

**Histogramming**

.. GENERATED FROM PYTHON SOURCE LINES 36-39

.. code-block:: default

    series = pd.Series(np.random.randint(0, 7, size=10))
    series.value_counts()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    0    3
    4    2
    6    2
    1    2
    3    1
    dtype: int64



.. GENERATED FROM PYTHON SOURCE LINES 40-41

**String methods**

.. GENERATED FROM PYTHON SOURCE LINES 41-42

.. code-block:: default

    series = pd.Series(["A", "B", "C", "Aaba", "Baca", np.nan, "CABA", "dog", "cat"])
    series.str.lower()



.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    0       a
    1       b
    2       c
    3    aaba
    4    baca
    5     NaN
    6    caba
    7     dog
    8     cat
    dtype: object




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.020 seconds)


.. _sphx_glr_download_11_demos_python_packages_pandas_demo_operations.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: demo_operations.py <demo_operations.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: demo_operations.ipynb <demo_operations.ipynb>`
