
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "11_demos\python_packages\pandas\demo_operations.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_11_demos_python_packages_pandas_demo_operations.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_11_demos_python_packages_pandas_demo_operations.py:

Operations
=============

.. GENERATED FROM PYTHON SOURCE LINES 5-13

.. code-block:: Python


    import pandas as pd
    import numpy as np


    dates = pd.date_range("20220501", periods=6)
    dataFrame = pd.DataFrame(np.random.randn(6, 4), index=dates, columns=list("ABCD"))








.. GENERATED FROM PYTHON SOURCE LINES 15-16

**Statistics**

.. GENERATED FROM PYTHON SOURCE LINES 16-18

.. code-block:: Python

    dataFrame.mean()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    A    0.510904
    B    0.309009
    C   -0.114758
    D   -0.246521
    dtype: float64



.. GENERATED FROM PYTHON SOURCE LINES 19-20

Mean value of axis ``1``:

.. GENERATED FROM PYTHON SOURCE LINES 20-22

.. code-block:: Python

    dataFrame.mean(1)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    2022-05-01    0.090335
    2022-05-02   -0.014631
    2022-05-03   -0.350706
    2022-05-04   -0.214797
    2022-05-05    0.602078
    2022-05-06    0.575671
    Freq: D, dtype: float64



.. GENERATED FROM PYTHON SOURCE LINES 23-25

.. code-block:: Python

    series = pd.Series([1, 3, 5, np.nan, 6, 8], index=dates).shift(2)








.. GENERATED FROM PYTHON SOURCE LINES 26-28

.. code-block:: Python

    dataFrame.sub(series, axis="index")






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>A</th>
          <th>B</th>
          <th>C</th>
          <th>D</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2022-05-01</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>2022-05-02</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
        <tr>
          <th>2022-05-03</th>
          <td>-0.284007</td>
          <td>-0.906460</td>
          <td>-2.257962</td>
          <td>-1.954394</td>
        </tr>
        <tr>
          <th>2022-05-04</th>
          <td>-1.867116</td>
          <td>-3.854271</td>
          <td>-3.230730</td>
          <td>-3.907071</td>
        </tr>
        <tr>
          <th>2022-05-05</th>
          <td>-4.482478</td>
          <td>-3.683779</td>
          <td>-4.677417</td>
          <td>-4.748012</td>
        </tr>
        <tr>
          <th>2022-05-06</th>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 29-30

**Apply**

.. GENERATED FROM PYTHON SOURCE LINES 30-32

.. code-block:: Python

    dataFrame.apply(np.cumsum)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>A</th>
          <th>B</th>
          <th>C</th>
          <th>D</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2022-05-01</th>
          <td>-0.063978</td>
          <td>0.239891</td>
          <td>0.216541</td>
          <td>-0.031114</td>
        </tr>
        <tr>
          <th>2022-05-02</th>
          <td>0.064901</td>
          <td>0.196255</td>
          <td>0.275400</td>
          <td>-0.233739</td>
        </tr>
        <tr>
          <th>2022-05-03</th>
          <td>0.780894</td>
          <td>0.289795</td>
          <td>-0.982562</td>
          <td>-1.188133</td>
        </tr>
        <tr>
          <th>2022-05-04</th>
          <td>1.913777</td>
          <td>-0.564475</td>
          <td>-1.213292</td>
          <td>-2.095204</td>
        </tr>
        <tr>
          <th>2022-05-05</th>
          <td>2.431299</td>
          <td>0.751746</td>
          <td>-0.890709</td>
          <td>-1.843216</td>
        </tr>
        <tr>
          <th>2022-05-06</th>
          <td>3.065426</td>
          <td>1.854051</td>
          <td>-0.688547</td>
          <td>-1.479128</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 33-35

.. code-block:: Python

    dataFrame.apply(lambda x: x.max() - x.min())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    A    1.196861
    B    2.170492
    C    1.580545
    D    1.318483
    dtype: float64



.. GENERATED FROM PYTHON SOURCE LINES 36-37

**Histogramming**

.. GENERATED FROM PYTHON SOURCE LINES 37-40

.. code-block:: Python

    series = pd.Series(np.random.randint(0, 7, size=10))
    series.value_counts()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    4    4
    1    2
    0    1
    5    1
    2    1
    3    1
    Name: count, dtype: int64



.. GENERATED FROM PYTHON SOURCE LINES 41-42

**String methods**

.. GENERATED FROM PYTHON SOURCE LINES 42-44

.. code-block:: Python

    series = pd.Series(["A", "B", "C", "Aaba", "Baca", np.nan, "CABA", "dog", "cat"])
    series.str.lower()




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    0       a
    1       b
    2       c
    3    aaba
    4    baca
    5     NaN
    6    caba
    7     dog
    8     cat
    dtype: object




.. _sphx_glr_download_11_demos_python_packages_pandas_demo_operations.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: demo_operations.ipynb <demo_operations.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: demo_operations.py <demo_operations.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: demo_operations.zip <demo_operations.zip>`
